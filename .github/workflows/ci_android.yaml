name: Android tests

# Step 1: Choose the branch or branches you want to run this workflow
on: [push, pull_request]

jobs:
  build_assets:
    name: Build android lib
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Android
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: aarch64-linux-android }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: arm-linux-androideabi }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: armv7-linux-androideabi }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: i686-linux-android }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: x86_64-linux-android }
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Downgrade cross
        uses: actions-rs/cargo@v1
        if: ${{ matrix.config.cross }}
        with:
          command: install
          args: --version 0.1.16 cross

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build ${{ matrix.config.target }} library
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --release --target ${{ matrix.config.target }} -p jormungandrwallet -- -C lto

      - name: prepare package
        run: mkdir -p dist/${{ matrix.config.target }}/iohk_wallet/lib

      - name: copy binary
        if: matrix.config.os != 'windows-latest'
        run: find ./target/${{ matrix.config.target }}/release -maxdepth 1 '(' -name "libjormungandrwallet.so" -o -name "libjormungandrwallet.a" ')' -exec cp {} dist/${{ matrix.config.target }}/iohk_wallet/lib \;

      - uses: actions/upload-artifact@v1
        with:
          name: iohk_wallet
          path: ./dist

  testing:
    name: Lint Check and Testing
    needs: build_assets
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Download builded libs
        uses: actions/download-artifact@v1
        with:
          name: iohk_wallet

      - name: Copy assets
        shell: bash
        run: cp -r iohk_wallet/* wallet-android/app/src/main/cpp/vendors/

      # Step 3: Check the code with Android linter
      - name: Run Android Lint
        working-directory: ./wallet-android
        run: ./gradlew lint

      # Step 4: Check the code with Android linter
      - name: Run Android build
        working-directory: ./wallet-android
        run: ./gradlew build

      # Step 5: Run your unit tests
      - name: Run Unit Tests
        working-directory: ./wallet-android
        run:  ./gradlew test