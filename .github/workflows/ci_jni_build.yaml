on: [push, pull_request]

name: C.I. JNI Android Build

jobs:
  release_assets:
    name: Check ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Android
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: aarch64-linux-android }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: arm-linux-androideabi }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: armv7-linux-androideabi }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: i686-linux-android }
          - { os: ubuntu-latest, cross: true, toolchain: stable, target: x86_64-linux-android }

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Downgrade cross
        uses: actions-rs/cargo@v1
        if: ${{ matrix.config.cross }}
        with:
          command: install
          args: --version 0.1.16 cross

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build library (release)
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --release --target ${{ matrix.config.target }} -p wallet-jni -- -C lto

      - name: Prepare package
        run: mkdir -p jniLibs/${{ matrix.config.target }}

      - name: copy binary
        if: matrix.config.os != 'windows-latest'
        run: find ./target/${{ matrix.config.target }}/release -maxdepth 1 '(' -name "wallet-jni.so" -o -name "wallet-jni.a" ')' -exec cp {} jniLibs/${{ matrix.config.target }}

      - uses: actions/upload-artifact@v1
        with:
          name: jniLibs
          path: ./jniLibs